<!-- ?xml version="1.0" encoding="ISO-8859-1"? -->
<ocsigen>
    <!-- Each <server> tag describes a different server process: 
	they must listen on different ports 
    -->
  <server>
    <port>80</port> <!-- The port for the server (default 80 for HTTP, 443 for HTTPS) -->
    <logdir>_LOGDIR_</logdir> <!-- Where log files are to be written -->
    <staticdir>_STATICPAGESDIR_</staticdir> <!-- Where static pages are (default: none) -->
    <user>_OCSIGENUSER_</user> <!-- The user who will run Ocsigen (not root!) -->
    <group>_OCSIGENGROUP_</group> <!-- The group (not root!) -->
    <!-- <maxconnected>500</maxconnected> Max number of simultaneous connections -->
    <!-- <timeout>300</timeout> Timeout for connections -->
    <!-- <keepalivetimeout>300</keepalivetimeout> Amount of time the server will wait for subsequent requests on a persistent connection -->
    <!-- <netbuffersize>8000</netbuffersize> Size of the input buffer (sockets) -->
    <!-- <filebuffersize>8000</filebuffersize> Size of the buffer for reading files -->
    <!-- <minthreads>10</minthreads> Minimum size of the detached threads pool (default 10) -->
    <!-- <maxthreads>300</maxthreads> Maximal size of the detached threads pool (default 300) -->
    <!-- <maxdetachedcomputationsqueued>100</maxdetachedcomputationsqueued> Size of the queue of computations waiting a detached thread (default 100) -->
    <!-- If you want to use HTTPS:
    <ssl>
       <certificate>path_to/cert.pem</certificate>
       <privatekey>path_to/privkey.pem</privatekey>
    </ssl>

    To create a 1024-bit private key to use when creating your CA.:
    openssl genrsa -des3 -out privkey.pem 1024

    To create a master certificate based on this key, to use when signing other
    certificates:
    openssl req -new -x509 -days 1001 -key privkey.pem -out cert.pem

    -->
    <!--
    <!-- If you want to load some Ocaml module (here ocsimore): -->
    <dynlink>_MODULEINSTALLDIR_/ocsimore.cma</dynlink>
     
    <!-- Ocsimore examples : -->
    <dynlink>_MODULEINSTALLDIR_/ocsexample_util.cmo</dynlink>
    -->

    <host>  
      <!-- Now attach each Ocsigen module to an URL 
           (and possibly to a directory for its static pages) -->
      <site dir=""> <!-- dir is the directory where the site is loaded -->
        <!-- Tutorial -->
        <module>_MODULEINSTALLDIR_/tutorial.cmo</module>
        <staticdir>_STATICPAGESDIR_/tutorial</staticdir>
        <!--<mimefile>/etc/mime.types</mimefile> The mime types file 
                          used for sending static pages -->
      </site>

      <!--
      <site>
        <!-- Ocsimore example 1 -->
        <url>ocsimore1</url>
        <module>_MODULEINSTALLDIR_/ocsexample1.cmo</module>
      </site>
    
      <site>
        <!-- Ocsimore example with authentification -->
        <url>ocsimore2</url>
        <module>_MODULEINSTALLDIR_/ocsexample2.cmo</module>
      </site>
      -->
  
      <!--
      <site>
        <!-- Monitoring -->
        <url>monitoring</url>
        <module>_MODULEINSTALLDIR_/monitoring.cmo</module>
      </site>
      -->
    </host>

    <!-- 
    <host name="*.com">
    </host>

       If your server has several host names, you can decide which sites will
       be available for each name, using virtual servers.
       To use virtual servers, specify for <site> the attribute 'host'.
       'name' is a string that may contain '*' characters.
       Examples: <host name="*">...</host> will match any host name (default).
       <host name="*.com">...</host> will match any host name finishing 
       with '.com'.
       <host name="www.mysite.com www.mysite.org">...</site> 
	will match only those two hostnames.
     -->
  
    

  </server>

  <!-- If you want another server, running on another port ...
  <server> 
  </server> 
  -->
  
</ocsigen>
