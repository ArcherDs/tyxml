INTF := lib/xml_sigs.cmi \
        lib/xml_print.cmi \
        lib/xml_iter.cmi \
        lib/xml.cmi \
	\
        lib/xhtml_types.cmi \
        lib/xhtml_sigs.cmi \
        lib/xhtml_f.cmi \
	\
        lib/svg_types.cmi \
        lib/svg_sigs.cmi \
	lib/svg_f.cmi \
	\
        lib/html5_types.cmi \
        lib/html5_sigs.cmi \
        lib/html5_f.cmi \
	\
        lib/xhtml.cmi \
        lib/svg.cmi \
        lib/html5.cmi \
	\
        syntax/pa_tyxml.cmi \
        syntax/simplexmlparser.cmi \

IMPL := lib/${LIBNAME}_f.cma \
        lib/${LIBNAME}.cma \
        syntax/pa_${LIBNAME}.cmo \
        syntax/xmllexer.cmo \
        syntax/simplexmlparser.cmo \

NATIMPL := lib/${LIBNAME}.cmxa \
           lib/${LIBNAME}_f.cmxa \
           syntax/xmllexer.cmx \
	   syntax/simplexmlparser.cmx \

NATIMPL += $(patsubst %.cmxa,%$(LIBEXT),$(filter %.cmxa,${NATIMPL})) \
           $(patsubst %.cmx,%$(OBJEXT),$(filter %.cmx,${NATIMPL}))   \

ifeq "${NATDYNLINK}" "yes"
NATIMPL += $(patsubst %.cmxa,%.cmxs,$(filter %.cmxa,${NATIMPL})) \
           $(patsubst %.cmx,%.cmxs,$(filter %.cmx,${NATIMPL}))
endif

NOMLI :=

DOC := $(filter-out ${NOMLI}, ${INTF:.cmi=.mli}) ${NOMLI:.mli=.ml}

##

DUCE_INTF := lib/xml_sigs_duce.cmi    \
             lib/xml_print_duce.cmi   \
             lib/xhtml_types_duce.cmi \
             lib/xhtml_duce.cmi       \

DUCE_IMPL    := lib/${LIBNAME}_duce.cma
DUCE_NATIMPL := lib/${LIBNAME}_duce.cmxa lib/${LIBNAME}_duce$(LIBEXT)

ifeq "${NATDYNLINK}" "yes"
DUCE_NATIMPL += lib/${LIBNAME}_duce.cmxs
endif

DUCE_NOMLI :=

DUCE_DOC := $(filter-out ${DUCE_NOMLI}, ${DUCE_INTF:.cmi=.mli}) ${DUCE_NOMLI:.mli=.ml}

ifeq "${OCAMLDUCE}" "yes"
INTF    += ${DUCE_INTF}
IMPL    += ${DUCE_IMPL}
NATIMPL += ${DUCE_NATIMPL}
DOC     += ${DUCE_DOC}
endif

MLI_TO_INSTALL := $(foreach X,$(INTF:.cmi=.ml),$(if $(wildcard $(X)i),$(X)i,$(X)))
